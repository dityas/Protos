/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.8.2/samples
 */
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java'
    id 'eclipse'
    id 'antlr'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

sourceSets {

    main {
        java {
            srcDirs = ['Protos/src']
        }
        
        antlr {
        	srcDirs = ['Protos/src/antlr']
        }
        
        resources {
            srcDirs = ['Protos/resources']
        }
    }
    
    test {
    	
    	java {
    		srcDirs = ["Protos/tests"]
    	}
    	
    	resources {
    		srcDirs = ["Protos/resources"]
    	}
    }	
}

dependencies {

	// Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    
    antlr "org.antlr:antlr4:4.5"

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    implementation group: 'commons-io', name: 'commons-io', version: '2.4'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
    implementation group: 'com.fasterxml.jackson.core', name:'jackson-core', version:'2.4.2'
    implementation group: 'com.fasterxml.jackson.core', name:'jackson-databind', version:'2.4.2'
    implementation group: 'com.fasterxml.jackson.core', name:'jackson-annotations', version:'2.4.2'
    
	implementation 'com.google.code.gson:gson:2.8.7'
	
	// https://mvnrepository.com/artifact/commons-cli/commons-cli
	implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
	
	// https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
	implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
	
    // LMAX disruptor for async logging
    implementation 'com.lmax:disruptor:3.4.4'    
}

generateGrammarSource {
	println "Running generateGrammarSource"
	arguments += ['-package', 'thinclab.spuddx_parser', '-visitor']
	//outputDirectory = new File("".toString())
	outputDirectory = new File("Protos/src/thinclab/spuddx_parser")
}

compileJava.dependsOn generateGrammarSource

test {
    // Use junit platform for unit tests.
    useJUnitPlatform()
    
    testLogging.showStandardStreams = true
    
    testLogging.exceptionFormat = 'full'
}

jar {

	manifest {
		attributes "Main-Class" : "thinclab.executables.ProtosLauncher"
	}
	
	from {
		configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}
